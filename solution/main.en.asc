= Challenge SSTIC 2015 : éléments de solution
Julien Perrot @nieluj
v1.0, 2015-04-23
:doctype: article
:toc: right
//:toc: left
:toc-title: Table of contents
:toclevels: 3
:source-highlighter: pygments
//:source-highlighter: highlightjs
//:highlightjs-theme: default
//:pygments-css: class
//:pygments-style: pastie
:stylesdir: stylesheets
:stylesheet: asciidoctor.css
//:numbered:
:icons: font
:pdf-stylesdir: styles
:pdf-style: sstic
:pagenums:
//:data-uri:
:stem:
:linkcss:

Ce document présente la méthodologie suivie pour résoudre l'édition
2015 du challenge SSTIC. La validation de celui-ci nécessite de retrouver une
adresse email au sein d'un fichier téléchargé depuis le site Internet du
symposium.

Six étapes doivent être séquentiellement résolues pour obtenir l'adresse email
recherchée :

* l'étude d'une image de carte SD contenant une charge utile pour Rubber Ducky ;
* l'identification d'une clé de déchiffrement dans une carte du jeu Quake 3 ;
* la reconstitution d'une image depuis les déplacements et les clics d'une souris
extraits d'une capture USB ;
* l'analyse d'un code JavaScript obfusqué pour identifier une routine de
déchiffrement et obtenir la clé valide avec une attaque par force brute ;
* la rétro-conception d'une routine de déchiffrement implémentée sur un
processeur ST20 permettant de constater une faiblesse dans l'algorithme
qui peut alors être exploitée pour obtenir la clé attendue ;
* enfin, l'analyse de quatre images imbriquées, l'adresse de validation étant
affichée sur la dernière image.

//include::0-intro/intro.asc[]
include::1-rubberducky/rubberducky.en.asc[]
include::2-quake3/quake3.en.asc[]
include::3-paint/paint.en.asc[]
include::4-html/html.en.asc[]
include::5-st20/st20.en.asc[]
include::6-stego/stego.en.asc[]
include::7-conclusion/conclusion.en.asc[]
include::8-annexes/annexes.en.asc[]
